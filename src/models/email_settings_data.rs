/*
 * BTCPay Greenfield API
 *
 * A full API to use your BTCPay Server
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EmailSettingsData {
    /// Smtp server host
    #[serde(rename = "server", skip_serializing_if = "Option::is_none")]
    pub server: Option<String>,
    /// Smtp server port
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<f32>,
    /// Smtp server username
    #[serde(rename = "login", skip_serializing_if = "Option::is_none")]
    pub login: Option<String>,
    /// Smtp server password
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    /// Email to send from
    #[serde(rename = "from", skip_serializing_if = "Option::is_none")]
    pub from: Option<String>,
    /// The name of the sender
    #[serde(rename = "fromDisplay", skip_serializing_if = "Option::is_none")]
    pub from_display: Option<String>,
}

impl EmailSettingsData {
    pub fn new() -> EmailSettingsData {
        EmailSettingsData {
            server: None,
            port: None,
            login: None,
            password: None,
            from: None,
            from_display: None,
        }
    }
}


