/*
 * BTCPay Greenfield API
 *
 * A full API to use your BTCPay Server
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GenericPaymentMethodDataData : Associated dynamic data based on payment method type.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GenericPaymentMethodDataData {
    /// The derivation scheme
    #[serde(rename = "derivationScheme", skip_serializing_if = "Option::is_none")]
    pub derivation_scheme: Option<String>,
    /// A label that will be shown in the UI
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    /// The wallet fingerprint followed by the keypath to derive the account key used for signing operation or creating PSBTs
    #[serde(rename = "accountKeyPath", skip_serializing_if = "Option::is_none")]
    pub account_key_path: Option<String>,
    /// The lightning connection string. Set to 'Internal Node' to use the internal node. (See [this doc](https://github.com/btcpayserver/BTCPayServer.Lightning/blob/master/README.md#examples) for some example)
    #[serde(rename = "connectionString", skip_serializing_if = "Option::is_none")]
    pub connection_string: Option<String>,
    /// Whether to disable generation of bolt11 invoices. Useful when wanting to only use LNURL Pay exclusively.
    #[serde(rename = "disableBOLT11PaymentOption", skip_serializing_if = "Option::is_none")]
    pub disable_bolt11_payment_option: Option<bool>,
}

impl GenericPaymentMethodDataData {
    /// Associated dynamic data based on payment method type.
    pub fn new() -> GenericPaymentMethodDataData {
        GenericPaymentMethodDataData {
            derivation_scheme: None,
            label: None,
            account_key_path: None,
            connection_string: None,
            disable_bolt11_payment_option: None,
        }
    }
}


