/*
 * BTCPay Greenfield API
 *
 * A full API to use your BTCPay Server
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CustodianData {
    /// The unique code of the custodian.
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<String>,
    /// The name of the custodian.
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    /// A list of payment methods (crypto code + network) you can deposit to the custodian.
    #[serde(rename = "depositablePaymentMethods", skip_serializing_if = "Option::is_none")]
    pub depositable_payment_methods: Option<Vec<String>>,
    /// A list of payment methods (crypto code + network) you can withdraw from the custodian.
    #[serde(rename = "withdrawablePaymentMethods", skip_serializing_if = "Option::is_none")]
    pub withdrawable_payment_methods: Option<Vec<String>>,
    /// A list of tradable asset pair objects, or NULL if the custodian cannot trades/convert assets.
    #[serde(rename = "tradableAssetPairs", skip_serializing_if = "Option::is_none")]
    pub tradable_asset_pairs: Option<Vec<crate::models::AssetPairData>>,
}

impl CustodianData {
    pub fn new() -> CustodianData {
        CustodianData {
            code: None,
            label: None,
            depositable_payment_methods: None,
            withdrawable_payment_methods: None,
            tradable_asset_pairs: None,
        }
    }
}


