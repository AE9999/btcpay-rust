/*
 * BTCPay Greenfield API
 *
 * A full API to use your BTCPay Server
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateInvoiceRequest {
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<crate::models::InvoiceMetadata>>,
    #[serde(rename = "checkout", skip_serializing_if = "Option::is_none")]
    pub checkout: Option<Box<crate::models::CheckoutOptions>>,
    #[serde(rename = "receipt", skip_serializing_if = "Option::is_none")]
    pub receipt: Option<Box<crate::models::ReceiptOptions>>,
    /// The amount of the invoice. If null or unspecified, the invoice will be a top-up invoice. (ie. The invoice will consider any payment as a full payment)
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    /// The currency of the invoice (if null, empty or unspecified, the currency will be the store's settings default)'
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
    /// Additional search term to help you find this invoice via text search
    #[serde(rename = "additionalSearchTerms", skip_serializing_if = "Option::is_none")]
    pub additional_search_terms: Option<Vec<String>>,
}

impl CreateInvoiceRequest {
    pub fn new() -> CreateInvoiceRequest {
        CreateInvoiceRequest {
            metadata: None,
            checkout: None,
            receipt: None,
            amount: None,
            currency: None,
            additional_search_terms: None,
        }
    }
}


