/*
 * BTCPay Greenfield API
 *
 * A full API to use your BTCPay Server
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LnurlPayPaymentMethodBaseData {
    /// Whether to use [LUD-01](https://github.com/fiatjaf/lnurl-rfc/blob/luds/01.md)'s bech32 format or to use [LUD-17](https://github.com/fiatjaf/lnurl-rfc/blob/luds/17.md) url formatting. 
    #[serde(rename = "useBech32Scheme", skip_serializing_if = "Option::is_none")]
    pub use_bech32_scheme: Option<bool>,
    /// Whether to allow this payment method to also be used for standard invoices and not just topup invoices.
    #[serde(rename = "enableForStandardInvoices", skip_serializing_if = "Option::is_none")]
    pub enable_for_standard_invoices: Option<bool>,
    /// Allow comments to be passed on via lnurl.
    #[serde(rename = "lud12Enabled", skip_serializing_if = "Option::is_none")]
    pub lud12_enabled: Option<bool>,
}

impl LnurlPayPaymentMethodBaseData {
    pub fn new() -> LnurlPayPaymentMethodBaseData {
        LnurlPayPaymentMethodBaseData {
            use_bech32_scheme: None,
            enable_for_standard_invoices: None,
            lud12_enabled: None,
        }
    }
}


