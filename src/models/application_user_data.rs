/*
 * BTCPay Greenfield API
 *
 * A full API to use your BTCPay Server
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ApplicationUserData {
    /// The id of the user
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The email of the user
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// True if the email has been confirmed by the user
    #[serde(rename = "emailConfirmed", skip_serializing_if = "Option::is_none")]
    pub email_confirmed: Option<bool>,
    /// True if the email requires email confirmation to log in
    #[serde(rename = "requiresEmailConfirmation", skip_serializing_if = "Option::is_none")]
    pub requires_email_confirmation: Option<bool>,
    /// The creation date of the user as a unix timestamp. Null if created before v1.0.5.6
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<Box<f32>>,
    /// The roles of the user
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<String>>,
}

impl ApplicationUserData {
    pub fn new() -> ApplicationUserData {
        ApplicationUserData {
            id: None,
            email: None,
            email_confirmed: None,
            requires_email_confirmation: None,
            created: None,
            roles: None,
        }
    }
}


