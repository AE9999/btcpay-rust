/*
 * BTCPay Greenfield API
 *
 * A full API to use your BTCPay Server
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TradeRequestData {
    /// The asset to trade.
    #[serde(rename = "fromAsset", skip_serializing_if = "Option::is_none")]
    pub from_asset: Option<String>,
    /// The asset you want.
    #[serde(rename = "toAsset", skip_serializing_if = "Option::is_none")]
    pub to_asset: Option<String>,
    #[serde(rename = "qty", skip_serializing_if = "Option::is_none")]
    pub qty: Option<Box<crate::models::TradeRequestDataQty>>,
}

impl TradeRequestData {
    pub fn new() -> TradeRequestData {
        TradeRequestData {
            from_asset: None,
            to_asset: None,
            qty: None,
        }
    }
}


